{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kamol\\\\Desktop\\\\todo-template-master\\\\todos\\\\src\\\\components\\\\task\\\\task.js\";\nimport React, { Component } from \"react\";\nimport NewTaskForm from '../new-task-form/new-task-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Task extends Component {\n  constructor() {\n    super();\n    this.state = {\n      status: 'active'\n    };\n    this.completeTask = () => {\n      this.setState(() => {\n        return {\n          status: 'completed'\n        };\n      });\n    };\n    this.editTask = () => {\n      this.setState(() => {\n        return {\n          status: 'editing'\n        };\n      });\n      const item = document.querySelector('.editing');\n      item.parentNode.insertAfter( /*#__PURE__*/_jsxDEV(NewTaskForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 41\n      }), item.lastChild);\n      //добавить перед </li> <NewTaskForm />\n    };\n  }\n\n  render() {\n    let desc = 'Active task';\n    // if (this.state.status == 'completed') {\n    //     desc = 'Completed task';\n    // }\n    // if (this.state.status == 'editing') {\n    //     desc = 'Editing task';\n    // }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: this.state.status,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"toggle\",\n          type: \"checkbox\",\n          onClick: this.completeTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description\",\n            children: desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"created\",\n            children: \"created 17 seconds ago\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon icon-edit\",\n          onClick: this.editTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon icon-destroy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n}\n;\n\n//export default Task;","map":{"version":3,"names":["React","Component","NewTaskForm","jsxDEV","_jsxDEV","Task","constructor","state","status","completeTask","setState","editTask","item","document","querySelector","parentNode","insertAfter","fileName","_jsxFileName","lineNumber","columnNumber","lastChild","render","desc","className","children","type","onClick"],"sources":["C:/Users/Kamol/Desktop/todo-template-master/todos/src/components/task/task.js"],"sourcesContent":["import React, {Component} from \"react\";\r\nimport NewTaskForm from '../new-task-form/new-task-form';\r\n\r\nexport default class Task extends Component {\r\n\r\n    \r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            status: 'active',\r\n        }\r\n        this.completeTask = () => {\r\n            this.setState(() => {\r\n                return {\r\n                    status: 'completed'\r\n                }\r\n            })\r\n        }\r\n        this.editTask = () => {\r\n            this.setState(() => {\r\n                return {\r\n                    status: 'editing'\r\n                }\r\n            })\r\n            const item = document.querySelector('.editing');\r\n            item.parentNode.insertAfter(<NewTaskForm />, item.lastChild)\r\n            //добавить перед </li> <NewTaskForm />\r\n        }\r\n\r\n    }\r\n    render() {\r\n        let desc = 'Active task';\r\n        // if (this.state.status == 'completed') {\r\n        //     desc = 'Completed task';\r\n        // }\r\n        // if (this.state.status == 'editing') {\r\n        //     desc = 'Editing task';\r\n        // }\r\n        return (\r\n\r\n            <li className={this.state.status}>\r\n                <div className=\"view\">\r\n                    <input className=\"toggle\" type=\"checkbox\" onClick={this.completeTask} />\r\n                    <label>\r\n                        <span className=\"description\">{desc}</span>\r\n                        <span className=\"created\">created 17 seconds ago</span>\r\n                        {/* Время создания задачи должно быть классом Date */}\r\n                    </label>\r\n                    <button className=\"icon icon-edit\" onClick={this.editTask}></button>\r\n                    <button className=\"icon icon-destroy\"></button>\r\n                </div>\r\n            </li>\r\n        );\r\n    }\r\n};\r\n\r\n//export default Task;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,WAAW,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,eAAe,MAAMC,IAAI,SAASJ,SAAS,CAAC;EAGxCK,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,KAAK,GAAG;MACTC,MAAM,EAAE;IACZ,CAAC;IACD,IAAI,CAACC,YAAY,GAAG,MAAM;MACtB,IAAI,CAACC,QAAQ,CAAC,MAAM;QAChB,OAAO;UACHF,MAAM,EAAE;QACZ,CAAC;MACL,CAAC,CAAC;IACN,CAAC;IACD,IAAI,CAACG,QAAQ,GAAG,MAAM;MAClB,IAAI,CAACD,QAAQ,CAAC,MAAM;QAChB,OAAO;UACHF,MAAM,EAAE;QACZ,CAAC;MACL,CAAC,CAAC;MACF,MAAMI,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;MAC/CF,IAAI,CAACG,UAAU,CAACC,WAAW,eAACZ,OAAA,CAACF,WAAW;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,CAAE,CAAC,EAAER,IAAI,CAACS,SAAS,CAAC;MAC5D;IACJ,CAAC;EAEL;;EACAC,MAAMA,CAAA,EAAG;IACL,IAAIC,IAAI,GAAG,aAAa;IACxB;IACA;IACA;IACA;IACA;IACA;IACA,oBAEInB,OAAA;MAAIoB,SAAS,EAAE,IAAI,CAACjB,KAAK,CAACC,MAAO;MAAAiB,QAAA,eAC7BrB,OAAA;QAAKoB,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACjBrB,OAAA;UAAOoB,SAAS,EAAC,QAAQ;UAACE,IAAI,EAAC,UAAU;UAACC,OAAO,EAAE,IAAI,CAAClB;QAAa;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxEhB,OAAA;UAAAqB,QAAA,gBACIrB,OAAA;YAAMoB,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAEF;UAAI;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC3ChB,OAAA;YAAMoB,SAAS,EAAC,SAAS;YAAAC,QAAA,EAAC;UAAsB;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEpD,CAAC,eACRhB,OAAA;UAAQoB,SAAS,EAAC,gBAAgB;UAACG,OAAO,EAAE,IAAI,CAAChB;QAAS;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eACpEhB,OAAA;UAAQoB,SAAS,EAAC;QAAmB;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEb;AACJ;AAAC;;AAED"},"metadata":{},"sourceType":"module","externalDependencies":[]}