{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kamol\\\\Desktop\\\\todo-template-master\\\\todos\\\\src\\\\components\\\\task\\\\task.js\";\nimport React, { Component } from \"react\";\nimport NewTaskForm from '../new-task-form/new-task-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Task extends Component {\n  constructor() {\n    super();\n    this.state = {\n      completedStatus: false,\n      editingStatus: false\n    };\n    this.completeTask = () => {\n      this.setState(completedStatus => {\n        return {\n          completedStatus: !completedStatus\n        };\n      });\n    };\n    this.editTask = () => {\n      this.setState(editingStatus => {\n        return {\n          editingStatus: !editingStatus\n        };\n      });\n      //const item = document.querySelector('.editing');\n      //item.insertAdjacentElement('beforeend', <NewTaskForm />);\n      //добавить перед </li> <NewTaskForm />\n    };\n  }\n\n  render() {\n    const {\n      text\n    } = this.props;\n    const {\n      editingStatus,\n      completedStatus\n    } = this.state;\n    let classes = '';\n    if (completedStatus) {\n      classes = 'completed';\n    }\n    if (editingStatus) {\n      classes = 'editing';\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: classes,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"toggle\",\n          type: \"checkbox\",\n          onClick: this.completeTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description\",\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"created\",\n            children: \"created 17 seconds ago\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon icon-edit\",\n          onClick: this.editTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon icon-destroy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n}\n;\n\n//export default Task;","map":{"version":3,"names":["React","Component","NewTaskForm","jsxDEV","_jsxDEV","Task","constructor","state","completedStatus","editingStatus","completeTask","setState","editTask","render","text","props","classes","className","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Kamol/Desktop/todo-template-master/todos/src/components/task/task.js"],"sourcesContent":["import React, {Component} from \"react\";\r\n\r\nimport NewTaskForm from '../new-task-form/new-task-form';\r\n\r\nexport default class Task extends Component {\r\n\r\n    \r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            completedStatus: false, \r\n            editingStatus: false\r\n        }\r\n        this.completeTask = () => {\r\n            this.setState((completedStatus) => {\r\n                return {\r\n                    completedStatus: !completedStatus\r\n                }\r\n            })\r\n        }\r\n        this.editTask = () => {\r\n            this.setState((editingStatus) => {\r\n                return {\r\n                    editingStatus: !editingStatus\r\n                }\r\n            })\r\n            //const item = document.querySelector('.editing');\r\n            //item.insertAdjacentElement('beforeend', <NewTaskForm />);\r\n            //добавить перед </li> <NewTaskForm />\r\n        }\r\n\r\n    }\r\n    render() {\r\n       const {text} = this.props;\r\n       const {editingStatus, completedStatus} = this.state;\r\n\r\n       let classes = '';\r\n       if (completedStatus) {\r\n        classes = 'completed';\r\n       }\r\n\r\n        if (editingStatus) {\r\n            classes = 'editing';\r\n        }\r\n\r\n        return (\r\n\r\n            <li className={classes}>\r\n                <div className=\"view\">\r\n                    <input className=\"toggle\" type=\"checkbox\" onClick={this.completeTask} />\r\n                    <label>\r\n                        <span className=\"description\">{text}</span>\r\n                        <span className=\"created\">created 17 seconds ago</span>\r\n                        {/* Время создания задачи должно быть классом Date */}\r\n                    </label>\r\n                    <button className=\"icon icon-edit\" onClick={this.editTask}></button>\r\n                    <button className=\"icon icon-destroy\"></button>\r\n                </div>\r\n            </li>\r\n        );\r\n    }\r\n};\r\n\r\n//export default Task;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AAEtC,OAAOC,WAAW,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,eAAe,MAAMC,IAAI,SAASJ,SAAS,CAAC;EAGxCK,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,KAAK,GAAG;MACTC,eAAe,EAAE,KAAK;MACtBC,aAAa,EAAE;IACnB,CAAC;IACD,IAAI,CAACC,YAAY,GAAG,MAAM;MACtB,IAAI,CAACC,QAAQ,CAAEH,eAAe,IAAK;QAC/B,OAAO;UACHA,eAAe,EAAE,CAACA;QACtB,CAAC;MACL,CAAC,CAAC;IACN,CAAC;IACD,IAAI,CAACI,QAAQ,GAAG,MAAM;MAClB,IAAI,CAACD,QAAQ,CAAEF,aAAa,IAAK;QAC7B,OAAO;UACHA,aAAa,EAAE,CAACA;QACpB,CAAC;MACL,CAAC,CAAC;MACF;MACA;MACA;IACJ,CAAC;EAEL;;EACAI,MAAMA,CAAA,EAAG;IACN,MAAM;MAACC;IAAI,CAAC,GAAG,IAAI,CAACC,KAAK;IACzB,MAAM;MAACN,aAAa;MAAED;IAAe,CAAC,GAAG,IAAI,CAACD,KAAK;IAEnD,IAAIS,OAAO,GAAG,EAAE;IAChB,IAAIR,eAAe,EAAE;MACpBQ,OAAO,GAAG,WAAW;IACtB;IAEC,IAAIP,aAAa,EAAE;MACfO,OAAO,GAAG,SAAS;IACvB;IAEA,oBAEIZ,OAAA;MAAIa,SAAS,EAAED,OAAQ;MAAAE,QAAA,eACnBd,OAAA;QAAKa,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACjBd,OAAA;UAAOa,SAAS,EAAC,QAAQ;UAACE,IAAI,EAAC,UAAU;UAACC,OAAO,EAAE,IAAI,CAACV;QAAa;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxEpB,OAAA;UAAAc,QAAA,gBACId,OAAA;YAAMa,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAEJ;UAAI;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC3CpB,OAAA;YAAMa,SAAS,EAAC,SAAS;YAAAC,QAAA,EAAC;UAAsB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEpD,CAAC,eACRpB,OAAA;UAAQa,SAAS,EAAC,gBAAgB;UAACG,OAAO,EAAE,IAAI,CAACR;QAAS;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eACpEpB,OAAA;UAAQa,SAAS,EAAC;QAAmB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEb;AACJ;AAAC;;AAED"},"metadata":{},"sourceType":"module","externalDependencies":[]}